#Generated by hybris installer
#Mon Apr 12 16:02:35 IST 2021
recaptcha.publickey=
recaptcha.privatekey=
googleApiKey=
csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/(events)$

# local_property:
initialpassword.admin=apple

mykey=myvalue


## hAC url configuraqtion ##
#hac.webroot=/hac
hac.webroot=/admin


#If we don\u2019t specify deployment for the above scenarios then build will fail.
#If we want to pass the build and let items to be stored in GenericItem table then define below property in the local.properties file
#build.development.mode=false
#This is not advisable because storing many item types in GenericItem table will decrease the performance and possibility of data truncation due to columns limit in the table.
#Deployment table should not be defined for any Item type if there is already a deployment defined for its super type otherwise it will decrease the performance as it has to perform multiple joins while retrieving.
# Ex: In this case Its not advisable to specify the deployment for ApparelProduct as it is extending Product and Product has the deployment defined already.

##################################### Debug model Settings ####################################

tomcat.debugjavaoptions=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=8888,suspend=n

##################################### Debug model Settings ####################################


############################## BUILD SETTINGS / OPTIMIZATION Beginning ########################

#If your development server has more than one core, you can set extra options to speed up the initialization process, as well as importing and synchronizing catalogs later on.
# WARNING! - number of impex.import and catalog.sync workers could have maximum value equal number of cores
# Number of synchronization threads
impex.import.workers=8
catalog.sync.workers=8

# Set to true if you want to build extensions in parallel if possible.
# Whenever there is no dependency, ant will fork multiple threads and build the extensions in parallel.
# This makes sense only if you have multiple cores in your system.
# Warning: The outpout to console is printed asynchronously and with that hard to read.
#build.parallel=false
#build.parallel=true

#You can also customize cache settings with help of the following options.
cache.main=120000
regioncache.entityregion.size=120000

#set false to speedup of update process/ post update set it to true
commerceservices.org.unit.path.generation.enabled=false

########################## BUILD SETTINGS / OPTIMIZATION Beginning #############################


############################ Legacy Mode Settings Beginning ####################################
#6. Use legacy mode
#Essentially this bypasses the Service Layer and uses Jalo directly.
#This offers a good performance improvement however we won't be able to use the Service Layer interceptor's for validation.
impex.legacy.mode=true

#Determines whether ImpEx should use legacy Jalo mode for all operations
#impex.legacy.mode=false

#Determines whether the legacy or servicelayer persistence adapter is used for catalog synchronization - omits service layer validation
synchronization.legacy.mode=true
############################ Legacy Mode Settings Beginning #####################################



##################################### Solr Properties ###########################################

## Troubleshoot steps to solve your issue

# 1. Stop and start Hybris server again - This solve the issue most of the time as hybris stopped solr instance properly this time.

# 2. Stop the Solr server manually - You can run the below ant command or find it's process and kill it.
# ant stopSolrServer

# 3. Skip the Solr server error - If you really don't care about Solr for the current task you can simply add below the property. 
# Which let you Hybris server start even there will be any error with solr server startup.
#solrserver.failOnError=false

# 4. Setup standalone Solr server - which can be started/stopped independently from Hybris server. Refer this to setup standalone Solr server
# solrserver.instances.default.autostart=false

# 5. try to change the port and restart
# You can also try changing the default port
#solrserver.instances.default.port=8984

# 6. Check the Solr log - Still, you are not able to get the root cause, check ${HYBRIS_BIN}/ext-commerce/solrserver/resources/solr/server/logs and look for any more details.



solr.replication=false
solr.config.url=https://localhost:8983/solr
solr.mode=standalone
solr.embeddedMaster=false
solr.indexingUsername=solradmin
solr.indexingPassword=admin123
solr.username=solradmin
solr.password=admin123


##################################### Solr Properties ############################################
